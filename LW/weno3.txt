# WENO3
# 2 фиктивныx узла на границе, фактических !границ! N
N_fict = 2
N_all = N + 2*N_fict - 1

c = np.zeros(N_all)
c0 = np.zeros(N_all)

# вариация
TV_WENO3 = np.zeros(M)

# начальные условия
x = np.linspace(0-N_fict*dx, 1+N_fict*dx, num = N_all+1)
for i in range(N_fict, N_all-N_fict):
    c0[i] = INIT(x[i], 0, Task)
for i in range(N_fict):
    c0[i] = c0[N_fict]
    c0[N_all-i-1] = c0[N_all-N_fict-1]

# считаем
tc = 0
for j in range(M):
    tbefore=tc
    tc=tbefore+dt
    
    # WENO3 реконструкция поехли
    # 1 - левый 0 - правый 2(-1) - суперправый
    h0 = np.zeros(N)
    h1 = np.zeros(N)
    h2 = np.zeros(N)
    h_temp = [h2, h0, h1]
    hl  = np.zeros(N)
    hr  = np.zeros(N)
    eps = 1e-6
    alpha = np.zeros(2)
    omega = np.zeros(2)
    gamma = np.array([2/3, 1/3]) # стр. 112
    beta  = np.zeros(2)
    for i in range(N):
        # лекция
        i_temp = i + N_fict - 1 # отступ на фиктивные
        h0[i] =  1/2*c0[i_temp]   + 1/2*c0[i_temp+1]
        h1[i] = -1/2*c0[i_temp-1] + 3/2*c0[i_temp]
        h2[i] =  3/2*c0[i_temp+1] - 1/2*c0[i_temp]
        # лекция
        beta[0] = (c0[i_temp+1] - c0[i_temp])**2
        beta[1] = (c0[i_temp]   - c0[i_temp-1])**2
        # hl == u_left
        for k in range(2):
            alpha[k] = eps**2 if (abs(beta[k]) < eps) else beta[k]**2
            alpha[k] = gamma[k]/alpha[k]
        for k in range(2):
            omega[k] = alpha[k]/(sum(alpha))
            hl[i] += omega[k]*h_temp[k+1][i]
        # hr == u_right
        for k in range(2):
            alpha[k] = eps**2 if (abs(beta[k]) < eps) else beta[k]**2
            alpha[k] = gamma[::-1][k]/alpha[k]
        for k in range(2):
            omega[k] = alpha[k]/(sum(alpha))
            hr[i-1] += omega[k]*h_temp[k][i-1]
    
    # подставляем потоки в схему
    for i in range(N_fict, N_all-N_fict):
        i_temp = i - N_fict
        c[i] = c0[i] - Cu*(hl[i_temp+1] - hl[i_temp])
    
    # граничные условия (с учетом фиктивных)
    for i in range(N_fict):
        c[i] = c[N_fict]
        c[N_all-i-1] = c[N_all-N_fict-1]
    
    # вариация от времени
    TV_WENO3[j] = calc_TV(c0[N_fict:N+N_fict])
    
    for i in range(N_all):
        c0[i] = c[i]

WENO3 = c0[N_fict:N_all-N_fict].copy()